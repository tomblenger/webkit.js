# Makefile.in generated by automake 1.11 from Makefile.am.
# doc/public/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# BEFORE MODIFYING THIS FILE:
#
# This file is a descendant of an old copy of gtk-doc.make, modified for cairo minimally:
#
#   - Moved to build/
#   - Made it append to EXTRA_DIST and CLEANFILES
#   - Instead of all-local, make "doc" build docs, and err if gtk-doc not enabled
#   - Some other changed introduced in 7f114b781f5c530d57530e5f76402e41cdabac6b
#
# Before changing it, check to see if a newer gtk-doc.make has fixed the issue you are facing.
# From time to time, it would be nice to udpate this to the latest copy of gtk-doc.make, but
# please do review all the differences and port our modifications forward.
#

# -*- mode: makefile -*-

####################################
# Everything below here is generic #
####################################

pkgdatadir = $(datadir)/cairo
pkgincludedir = $(includedir)/cairo
pkglibdir = $(libdir)/cairo
pkglibexecdir = $(libexecdir)/cairo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin13.1.0
host_triplet = x86_64-apple-darwin13.1.0
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/build/Makefile.am.common \
	$(top_srcdir)/build/Makefile.am.gtk-doc \
	$(top_srcdir)/src/Makefile.am.features
EXTRA_PROGRAMS =
check_PROGRAMS =
#am__append_1 = check-doc-coverage.sh
subdir = doc/public
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/aclocal.cairo.m4 \
	$(top_srcdir)/build/aclocal.compare.m4 \
	$(top_srcdir)/build/aclocal.enable.m4 \
	$(top_srcdir)/build/aclocal.float.m4 \
	$(top_srcdir)/build/aclocal.makefile.m4 \
	$(top_srcdir)/build/aclocal.pkg.m4 \
	$(top_srcdir)/build/gtk-doc.m4 $(top_srcdir)/build/libtool.m4 \
	$(top_srcdir)/build/ltoptions.m4 \
	$(top_srcdir)/build/ltsugar.m4 \
	$(top_srcdir)/build/ltversion.m4 \
	$(top_srcdir)/build/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/cairo-version.h \
	$(top_srcdir)/build/configure.ac.version \
	$(top_srcdir)/build/configure.ac.tools \
	$(top_srcdir)/build/configure.ac.features \
	$(top_srcdir)/build/configure.ac.warnings \
	$(top_srcdir)/build/configure.ac.system \
	$(top_srcdir)/build/configure.ac.analysis \
	$(top_srcdir)/build/configure.ac.noversion \
	$(top_srcdir)/build/configure.ac.pthread \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
SOURCES =
DIST_SOURCES =
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Tint/webkit.js/deps/cairo-1.12.16/build/missing --run aclocal-1.11
AMTAR = ${SHELL} /Tint/webkit.js/deps/cairo-1.12.16/build/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = /Users/tlinton/Library/Emscripten/emscripten/1.16.0/emar
AS = as
AUTOCONF = ${SHELL} /Tint/webkit.js/deps/cairo-1.12.16/build/missing --run autoconf
AUTOHEADER = ${SHELL} /Tint/webkit.js/deps/cairo-1.12.16/build/missing --run autoheader
AUTOMAKE = ${SHELL} /Tint/webkit.js/deps/cairo-1.12.16/build/missing --run automake-1.11
AWK = awk
BFD_LIBS = 
CAIROBOILERPLATE_LIBS = 
CAIRO_CFLAGS =      -I/usr/local/include/pixman-1     -I/usr/local/include  -I/usr/local/include/freetype2 -I/usr/local/include   -I/usr/local/include  -I/usr/local/include  -I../libpng   -Wall -Wextra -Wold-style-definition -Wdeclaration-after-statement -Wmissing-declarations -Werror-implicit-function-declaration -Wnested-externs -Wpointer-arith -Wwrite-strings -Wsign-compare -Wstrict-prototypes -Wmissing-prototypes -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wbad-function-cast -Wvolatile-register-var -Wstrict-aliasing=2 -Winit-self -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline -erroff=E_ENUM_TYPE_MISMATCH_ARG -erroff=E_ENUM_TYPE_MISMATCH_OP -fno-strict-aliasing -fno-common -Wp,-D_FORTIFY_SOURCE=2                
CAIRO_LDFLAGS = 
CAIRO_LIBS =      -L/usr/local/lib -lpixman-1     -L/usr/local/lib -lfontconfig  -L/usr/local/lib -lfreetype   -L/usr/local/lib  -L/usr/local/lib  -ldl -lpng         -lz -lz       
CAIRO_LIBTOOL_VERSION_INFO = 11202:16:11200
CAIRO_NONPKGCONFIG_CFLAGS =                
CAIRO_NONPKGCONFIG_LIBS =        -lz -lz       
CAIRO_RELEASE_STATUS = release
CAIRO_REQUIRES =      pixman-1 >= 0.16.0    fontconfig >= 2.2.95 freetype2 >= 9.7.3   egl glesv2 libpng 
CAIRO_TEST_MODE = 
CAIRO_TEST_UNDEFINED_LDFLAGS = 
CAIRO_VERSION_MAJOR = 1
CAIRO_VERSION_MICRO = 16
CAIRO_VERSION_MINOR = 12
CAIRO_VERSION_SONUM = 2
CC = /Users/tlinton/Library/Emscripten/emscripten/1.16.0/emcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = /Users/tlinton/Library/Emscripten/emscripten/1.16.0/emcc -E
CPPFLAGS = 
CXX = /Users/tlinton/Library/Emscripten/emscripten/1.16.0/em++
CXXCPP = /Users/tlinton/Library/Emscripten/emscripten/1.16.0/em++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FIND = /usr/bin/find
FONTCONFIG_CFLAGS = -I/usr/local/include 
FONTCONFIG_LIBS = -L/usr/local/lib -lfontconfig 
FREETYPE_CFLAGS = -I/usr/local/include/freetype2 -I/usr/local/include 
FREETYPE_CONFIG = 
FREETYPE_LIBS = -L/usr/local/lib -lfreetype 
GOBJECT_CFLAGS = 
GOBJECT_LIBS = 
GREP = /usr/bin/grep
GS = 
GTKDOC_CHECK = 
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Users/tlinton/Library/Emscripten/emscripten/1.16.0/emcc
LDFLAGS = 
LIBM = 
LIBOBJS = 
LIBRSVG_CFLAGS = 
LIBRSVG_LIBS = 
LIBS =  
LIBSPECTRE_CFLAGS = 
LIBSPECTRE_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
MAKEINFO = ${SHELL} /Tint/webkit.js/deps/cairo-1.12.16/build/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../../build/install-sh -c -d
NM = /usr/bin/nm
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = cairo
PACKAGE_BUGREPORT = http://bugs.freedesktop.org/enter_bug.cgi?product=cairo
PACKAGE_NAME = cairo
PACKAGE_STRING = cairo 1.12.16
PACKAGE_TARNAME = cairo
PACKAGE_URL = http://cairographics.org/
PACKAGE_VERSION = 1.12.16
PATH_SEPARATOR = :
PKGCONFIG_REQUIRES = Requires.private
PKG_CONFIG = /usr/local/bin/pkg-config
POPPLER_CFLAGS = 
POPPLER_LIBS = 
RANLIB = /Users/tlinton/Library/Emscripten/emscripten/1.16.0/emranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SHLIB_EXT = dylib
SHM_LIBS = 
SHTOOL = 
STRIP = strip
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VERSION = 1.12.16
XARGS = /usr/bin/xargs
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /Tint/webkit.js/deps/cairo-1.12.16/doc/public
abs_srcdir = /Tint/webkit.js/deps/cairo-1.12.16/doc/public
abs_top_builddir = /Tint/webkit.js/deps/cairo-1.12.16
abs_top_srcdir = /Tint/webkit.js/deps/cairo-1.12.16
ac_ct_AR = 
ac_ct_CC = /Users/tlinton/Library/Emscripten/emscripten/1.16.0/emcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin13.1.0
build_alias = 
build_cpu = x86_64
build_os = darwin13.1.0
build_vendor = apple
builddir = .
cogl_CFLAGS = 
cogl_LIBS = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
directfb_CFLAGS = 
directfb_LIBS = 
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
drm_CFLAGS = 
drm_LIBS = 
dvidir = ${docdir}
egl_CFLAGS = -I/usr/local/include 
egl_LIBS = -L/usr/local/lib 
exec_prefix = ${prefix}
gallium_DIR = 
gl_CFLAGS = 
gl_LIBS = 
glesv2_CFLAGS = -I/usr/local/include 
glesv2_LIBS = -L/usr/local/lib  -ldl
glib_CFLAGS = 
glib_LIBS = 
gtk_CFLAGS = 
gtk_LIBS = 
host = x86_64-apple-darwin13.1.0
host_alias = 
host_cpu = x86_64
host_os = darwin13.1.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Tint/webkit.js/deps/cairo-1.12.16/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lzo_LIBS = 
mandir = ${datarootdir}/man
mesa_DIR = 
mkdir_p = $(top_builddir)/build/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
pixman_CFLAGS = -I/usr/local/include/pixman-1 
pixman_LIBS = -L/usr/local/lib -lpixman-1 
png_CFLAGS = -I../libpng
png_LIBS = -lpng
png_REQUIRES = libpng
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pthread_CFLAGS = 
pthread_LIBS = 
qt_CFLAGS = 
qt_LIBS = 
real_pthread_CFLAGS = 
real_pthread_LIBS = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
shm_LIBS = 
skia_DIR = 
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
xcb_CFLAGS = 
xcb_LIBS = 
xcb_shm_CFLAGS = 
xcb_shm_LIBS = 
xlib_CFLAGS = 
xlib_LIBS = 
xlib_xcb_CFLAGS = 
xlib_xcb_LIBS = 
xlib_xrender_CFLAGS = 
xlib_xrender_LIBS = 
BUILT_SOURCES = 
CLEANFILES = *.i *.s *.gch $(EXTRA_LTLIBRARIES) $(EXTRA_PROGRAMS) \
	$(check_PROGRAMS) $(SCANOBJ_FILES) $(REPORT_FILES) \
	$(DOC_STAMPS)
DISTCLEANFILES = $(BUILT_SOURCES)
EXTRA_DIST = $(content_files) $(HTML_IMAGES) $(DOC_MAIN_SGML_FILE) \
	$(DOC_MODULE)-sections.txt $(DOC_MODULE)-overrides.txt \
	check-doc-coverage.sh check-doc-syntax.sh
EXTRA_LTLIBRARIES = 
MAINTAINERCLEANFILES = Makefile.in
TESTS = $(am__append_1) check-doc-syntax.sh

# The name of the module.
DOC_MODULE = cairo

# The top-level SGML file.
DOC_MAIN_SGML_FILE = cairo-docs.xml

# Extra options to supply to gtkdoc-scan
SCAN_OPTIONS = --deprecated-guards="CAIRO_DISABLE_DEPRECATED" --ignore-decorators="cairo_public|cairo_private"

# The directory containing the source code.
DOC_SOURCE_DIR = $(top_srcdir)/src

# Used for dependencies
HFILE_GLOB = $(top_srcdir)/src/cairo*.h
CFILE_GLOB = $(top_srcdir)/src/cairo*.c
EXTRA_HFILES = $(top_builddir)/src/cairo-supported-features.h

# Headers to ignore
IGNORE_HFILES = \
	drm \
	cairo-features.h \
	cairo-features-win32.h \
	$(all_cairo_private) \
	$(unsupported_cairo_headers) \
	$(NULL)


# Extra options to supply to gtkdoc-mkdb
MKDB_OPTIONS = --sgml-mode --output-format=xml --name-space=cairo

# Extra options to supply to gtkdoc-mktmpl
MKTMPL_OPTIONS = 

# Non-autogenerated SGML files to be included in $(DOC_MAIN_SGML_FILE)
content_files = \
	language-bindings.xml \
	version.xml \
	$(NULL)


# Images to copy into HTML directory
HTML_IMAGES = 

# Extra options to supply to gtkdoc-fixref
FIXXREF_OPTIONS = 
#GTKDOC_CC = $(CC) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
GTKDOC_CC = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
#GTKDOC_LD = $(CC) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS)
GTKDOC_LD = $(LIBTOOL) --tag=CC --mode=link $(CC) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS)

# We set GPATH here; this gives us semantics for GNU make
# which are more like other make's VPATH, when it comes to
# whether a source that is a target of one rule is then
# searched for in VPATH/GPATH.
#
GPATH = $(srcdir)
TARGET_DIR = $(HTML_DIR)/$(DOC_MODULE)
DOC_STAMPS = scan-build.stamp tmpl-build.stamp sgml-build.stamp html-build.stamp \
	   $(srcdir)/tmpl.stamp $(srcdir)/sgml.stamp $(srcdir)/html.stamp

SCANOBJ_FILES = \
	$(DOC_MODULE).args 	 \
	$(DOC_MODULE).hierarchy  \
	$(DOC_MODULE).interfaces \
	$(DOC_MODULE).prerequisites \
	$(DOC_MODULE).signals

REPORT_FILES = \
	$(DOC_MODULE)-undocumented.txt \
	$(DOC_MODULE)-undeclared.txt \
	$(DOC_MODULE)-unused.txt

TESTS_ENVIRONMENT = srcdir="$(srcdir)" top_srcdir="$(top_srcdir)" MAKE="$(MAKE) $(AM_MAKEFLAGS)" DOC_MODULE="$(DOC_MODULE)" REPORT_FILES="$(REPORT_FILES)"
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build/Makefile.am.common $(top_srcdir)/src/Makefile.am.features $(top_srcdir)/build/Makefile.am.gtk-doc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign doc/public/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign doc/public/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-local

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-local

.MAKE: all check check-am install install-am install-strip

.PHONY: all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	dist-hook distclean distclean-generic distclean-libtool \
	distclean-local distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic maintainer-clean-local mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	uninstall uninstall-am uninstall-local


version.xml: $(top_srcdir)/cairo-version.h
	echo $(CAIRO_VERSION_MAJOR).$(CAIRO_VERSION_MINOR).$(CAIRO_VERSION_MICRO) > $@

#doc: html-build.stamp
doc:
	@echo "*** gtk-doc must be installed (and --enable-gtk-doc) in order to make doc"
	@false

docs: html-build.stamp

#### scan ####

scan-build.stamp: $(HFILE_GLOB) $(CFILE_GLOB) $(EXTRA_HFILES)
	@echo 'gtk-doc: Scanning header files'
	@-chmod -R u+w $(srcdir)
	gtkdoc-scan --module=$(DOC_MODULE) --source-dir=$(DOC_SOURCE_DIR) --ignore-headers="$(IGNORE_HFILES)" $(SCAN_OPTIONS) $(EXTRA_HFILES) --output-dir=$(srcdir)
	if grep -l '^..*$$' $(srcdir)/$(DOC_MODULE).types > /dev/null 2>&1 ; then \
	    CC="$(GTKDOC_CC)" LD="$(GTKDOC_LD)" CFLAGS="$(GTKDOC_CFLAGS)" LDFLAGS="$(GTKDOC_LIBS)" gtkdoc-scangobj $(SCANGOBJ_OPTIONS) --module=$(DOC_MODULE) --output-dir=$(srcdir) ; \
	else \
	    cd $(srcdir) ; \
	    for i in $(SCANOBJ_FILES) ; do \
               test -f $$i || touch $$i ; \
	    done \
	fi
	touch scan-build.stamp

$(DOC_MODULE)-decl.txt $(SCANOBJ_FILES) $(DOC_MODULE)-sections.txt $(DOC_MODULE)-overrides.txt: scan-build.stamp
	@true

#### templates ####

tmpl-build.stamp: $(DOC_MODULE)-decl.txt $(SCANOBJ_FILES) $(DOC_MODULE)-sections.txt $(DOC_MODULE)-overrides.txt
	@echo 'gtk-doc: Rebuilding template files'
	@-chmod -R u+w $(srcdir)
	cd $(srcdir) && gtkdoc-mktmpl --module=$(DOC_MODULE) $(MKTMPL_OPTIONS)
	touch tmpl-build.stamp

tmpl.stamp: tmpl-build.stamp
	@true

tmpl/*.sgml:
	@true

#### xml ####

# gtkdoc-mkdb is broken and requires a --root-dir=$(srcdir) option
# The _srcdir diversion is fragile but works for make check; make distcheck
sgml-build.stamp: tmpl.stamp $(HFILE_GLOB) $(CFILE_GLOB) $(DOC_MODULE)-sections.txt $(srcdir)/tmpl/*.sgml $(expand_content_files)
	@echo 'gtk-doc: Building XML'
	@-chmod -R u+w $(srcdir)
	_srcdir="`pwd`/$(DOC_SOURCE_DIR)"; \
	cd $(srcdir) && gtkdoc-mkdb --module=$(DOC_MODULE) --source-dir=$$_srcdir --output-format=xml --expand-content-files="$(expand_content_files)" --main-sgml-file=$(DOC_MAIN_SGML_FILE) $(MKDB_OPTIONS)
	touch sgml-build.stamp

sgml.stamp: sgml-build.stamp
	@true

#### html ####

html-build.stamp: sgml.stamp $(DOC_MAIN_SGML_FILE) $(content_files)
	@echo 'gtk-doc: Building HTML'
	@-chmod -R u+w $(srcdir)
	rm -rf $(srcdir)/html
	mkdir $(srcdir)/html
	cd $(srcdir)/html && gtkdoc-mkhtml $(DOC_MODULE) ../$(DOC_MAIN_SGML_FILE)
	test "x$(HTML_IMAGES)" = "x" || ( cd $(srcdir) && cp $(HTML_IMAGES) html )
	@echo 'gtk-doc: Fixing cross-references'
	cd $(srcdir) && gtkdoc-fixxref --module-dir=html --html-dir=$(HTML_DIR) $(FIXXREF_OPTIONS)
	touch html-build.stamp

##############

clean-local:
	rm -f *~ *.bak
	rm -rf .libs

distclean-local:
	cd $(srcdir) && \
	  rm -rf xml $(REPORT_FILES) \
	         $(DOC_MODULE)-decl-list.txt $(DOC_MODULE)-decl.txt

maintainer-clean-local: clean
	cd $(srcdir) && rm -rf xml html

install-data-local:
	-installfiles=`echo $(srcdir)/html/*`; \
	if test "$$installfiles" = '$(srcdir)/html/*'; \
	then echo '-- Nothing to install' ; \
	else \
	  $(mkinstalldirs) $(DESTDIR)$(TARGET_DIR); \
	  for i in $$installfiles; do \
	    echo '-- Installing '$$i ; \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(TARGET_DIR); \
	  done; \
	  echo '-- Installing $(srcdir)/html/index.sgml' ; \
	  $(INSTALL_DATA) $(srcdir)/html/index.sgml $(DESTDIR)$(TARGET_DIR) || :; \
	  which gtkdoc-rebase >/dev/null && \
	    gtkdoc-rebase --relative --dest-dir=$(DESTDIR) --html-dir=$(DESTDIR)$(TARGET_DIR) ; \
	fi

uninstall-local:
	rm -f $(DESTDIR)$(TARGET_DIR)/*

#
# Require gtk-doc when making dist
#
#dist-check-gtkdoc:
dist-check-gtkdoc:
	@echo "*** gtk-doc must be installed (and --enable-gtk-doc) in order to make dist"
	@false

dist-hook: dist-check-gtkdoc dist-hook-local
	mkdir $(distdir)/tmpl
	mkdir $(distdir)/xml
	mkdir $(distdir)/html
	-cp $(srcdir)/tmpl/*.sgml $(distdir)/tmpl
	-cp $(srcdir)/xml/*.xml $(distdir)/xml
	cp $(srcdir)/html/* $(distdir)/html
	-cp $(srcdir)/$(DOC_MODULE).types $(distdir)/
	-cp $(srcdir)/$(DOC_MODULE)-sections.txt $(distdir)/
	cd $(distdir) && rm -f $(DISTCLEANFILES)
	-gtkdoc-rebase --online --relative --html-dir=$(distdir)/html

.PHONY : dist-hook-local docs

dist-hook: doc

# This line really belongs in gtk-doc.mk
$(REPORT_FILES): sgml-build.stamp

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

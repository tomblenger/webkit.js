Test the parsing of custom() function of the -webkit-filter property.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".



========================================
Custom function tests.
========================================

Empty custom function.
custom()
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

One comma in custom function.
custom(,)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Multiple commas in custom function.
custom(,,)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Filter name tests.
========================================

No filter name with parameter.
custom(n 1)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Too many filter names.
custom(my-filter-1 my-filter-2)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Filter name as string.
custom('my-filter-1')
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Filter name as number.
custom(1)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Space between filter name and parameter.
custom(my-filter n 1)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Number parameter tests.
========================================

Too many parameter values.
custom(my-filter, n 1 2 3 4 5)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Invalid parameter type.
custom(my-filter, n 1.0 2.0 'text')
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No parameter definition after comma.
custom(my-filter,)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No parameter definition with two commas.
custom(my-filter,,)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No parameter definition before valid parameter defintion.
custom(my-filter, , n 1)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No parameter value.
custom(my-filter, n)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No parameter value with multiple parameters.
custom(my-filter, n1, n2, n3)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Color parameter tests.
========================================

No rgb color values.
custom(my-filter, c rgb(,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No hsl color values.
custom(my-filter, c hsl(,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Hex with 8 characters.
custom(my-filter, c #FF0000FF)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Hex with 2 character.
custom(my-filter, c #FF)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Rgba with 3 values and 2 commas.
custom(my-filter, c rgba(255, 0, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Transform parameter tests.
========================================

One invalid transform function.
custom(my-filter, t invalid-rotate(0deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Multiple invalid transform functions.
custom(my-filter, t invalid-rotate(0deg) invalid-perspective(0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Invalid transform function between valid ones.
custom(my-filter, t rotate(0deg) invalid-rotate(0deg) perspective(0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Valid transform function between invalid ones.
custom(my-filter, t invalid-rotate(0deg) perspective(0) invalid-translate(0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Valid transform function without leading comma.
custom(my-filter t perspective(0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Valid transform function with trailing comma.
custom(my-filter, t perspective(0),)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Valid transform function with trailing comma and without leading comma.
custom(my-filter t perspective(0),)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Invalid transform with trailing comma.
custom(my-filter, t invalid-rotate(0deg),)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Invalid transform without leading comma.
custom(my-filter t invalid_rotate(0deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Valid transform with invalid characters
custom(my-filter,t rotate(0deg) *.-,)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Array parameter tests.
========================================

Empty array.
custom(my-filter, a array())
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

One comma in array.
custom(my-filter, a array(,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Multiple commas in array.
custom(my-filter, a array(,,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Multiple commas with a value in array.
custom(my-filter, a array(,,1,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

One comma followed by a negative value in array.
custom(my-filter, a array(,-4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

One comma followed by a value in array.
custom(my-filter, a array(,4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

One negative value followed by a comma in array.
custom(my-filter, a array(-4,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

One value followed by a comma in array.
custom(my-filter, a array(4,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Valid values followed by a comma in array.
custom(my-filter, a array(1, 2, 3, 4,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Valid values followed by a letter in array.
custom(my-filter, a array(1, 2, 3, 4, x))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Two commas as separator between values in array.
custom(my-filter, a array(1, 2, , 4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Leading comma in array.
custom(my-filter, a array(,1, 2, 3, 4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Semicolon separated values in array.
custom(my-filter, a array(1; 2; 3; 4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Space separated values in array.
custom(my-filter, a array(1 2 3 4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Space separated values with comma terminator in array.
custom(my-filter, a array(1 2 3 4,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Space separated values with leading comma in array.
custom(my-filter, a array(, 1 2 3 4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

NaN in array.
custom(my-filter, a array(NaN))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

NaN between valid values in array.
custom(my-filter, a array(1, 2, NaN, 3))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Invalid value 'none' in array.
custom(my-filter, a array(none))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Invalid value unit 'px' in array.
custom(my-filter, a array(1px))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Invalid value unit 'deg' in array.
custom(my-filter, a array(1deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Invalid value unit 'px' in array after valid values.
custom(my-filter, a array(1, 2, 3, 4px))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Mat2 parameter tests.
========================================

Empty mat2.
custom(my-filter, a mat2())
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Too view arguments.
custom(my-filter, a mat2(0, 0, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No arguments but commas.
custom(my-filter, a mat2(,,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Ending commas.
custom(my-filter, a mat2(0, 0,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Idents in mat2 function.
custom(my-filter, a mat2(0, 0, a, b))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Too many arguments.
custom(my-filter, a mat2(0, 0, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No commas.
custom(my-filter, a mat2(1 0 0 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Some commas.
custom(my-filter, a mat2(1, 0, 0 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Leading commas.
custom(my-filter, a mat2(, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No length units.
custom(my-filter, a mat2(1px, 0px, 0px, 1px))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No degree units.
custom(my-filter, a mat2(1deg, 0deg, 0deg, 1deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

NaN in mat2.
custom(my-filter, a mat2(1, 0, 0, NaN))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Mat3 parameter tests.
========================================

Empty mat3.
custom(my-filter, a mat3())
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Too view arguments.
custom(my-filter, a mat3(0, 0, 0, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No arguments but commas.
custom(my-filter, a mat3(,,,,,,,,,,,,,,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Ending commas.
custom(my-filter, a mat3(1, 0, 0, 0, 1, 0, 0,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Idents in mat3 function.
custom(my-filter, a mat3(1, 0, 0, 0, 1, 0, 0, a, b))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Too many arguments.
custom(my-filter, a mat3(1, 0, 0, 0, 1, 0, 0, 0, 1, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No commas.
custom(my-filter, a mat3(1 0 0 0 1 0 0 0 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Some commas.
custom(my-filter, a mat3(1, 0, 0, 0, 1, 0 0 0 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Leading commas.
custom(my-filter, a mat3(, 0, 0, 0, 1, 0, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No length units.
custom(my-filter, a mat3(1px, 0, 0, 0, 1px, 0, 0, 0, 1px))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No degree units.
custom(my-filter, a mat3(1deg, 0, 0, 0, 1deg, 0, 0, 0, 1deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

NaN in mat3.
custom(my-filter, a mat2(NaN, 0, 0, 0, 1, 0, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Mat4 parameter tests.
========================================

Empty mat4.
custom(my-filter, a mat4())
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Too view arguments.
custom(my-filter, a mat4(1, 0, 0, 0, 1, 0, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No arguments but commas.
custom(my-filter, a mat4(,,,,,,,,,,,,,,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Ending commas.
custom(my-filter, a mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0,,))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Idents in mat4 function.
custom(my-filter, a mat4(1, 0, 0, 0, 1, 0, 0, a, b))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Too many arguments.
custom(my-filter, a mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No commas.
custom(my-filter, a mat4(1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Some commas.
custom(my-filter, a mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0 0 0 0 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Leading commas.
custom(my-filter, a mat4(, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No length units.
custom(my-filter, a mat4(1px, 0, 0, 0, 0, 1px, 0, 0, 0, 0, 1px, 0, 0, 0, 0, 1px))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

No degree units.
custom(my-filter, a mat4(1deg, 0, 0, 0, 0, 1deg, 0, 0, 0, 0, 1deg, 0, 0, 0, 0, 1deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

NaN in mat4.
custom(my-filter, a mat4(NaN, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

========================================
Mixing parameter types.
========================================

Number parameter with hex color.
custom(my-filter, n1 1 2 #FF0000)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Number parameter with color keyword.
custom(my-filter, n1 1 2 red)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Number parameter with rgb color.
custom(my-filter, n1 1 2 rgb(255, 0, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Color with number parameter.
custom(my-filter, a rgb(255, 0, 0) 1)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Color in array.
custom(my-filter, a array(0, rgb(255, 0, 0)))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Color and array.
custom(my-filter, a array(0, 0) rgb(255, 0, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Color with transform values.
custom(my-filter, a rotate(45deg) rgb(255, 0, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Color with transform values.
custom(my-filter, a rgb(255, 0, 0) rotate(45deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

Color with mat2.
custom(my-filter, a rgb(255, 0, 0) mat2(0, 0, 0, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null

mat2 with mat3.
custom(my-filter, a mat2(1, 0, 0, 1) mat3(0, 0, 0, 0, 0, 0, 0, 0, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS declaration.length is 0
PASS declaration.getPropertyValue('-webkit-filter') is null
PASS successfullyParsed is true

TEST COMPLETE


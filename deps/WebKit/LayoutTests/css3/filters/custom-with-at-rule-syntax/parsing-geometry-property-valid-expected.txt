Test geometry property parsing in the @-webkit-filter at-rule.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".



========================================
Geometry property.
========================================

Geometry with full mesh and attached.
geometry: grid(1 1 attached);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "1 1 attached"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 3

Geometry with full mesh and detached.
geometry: grid(1 1 detached);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "1 1 detached"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 3

Geometry with full mesh and no attached, nor detached.
geometry: grid(1 1);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "1 1"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 2

Geometry with only one mesh value.
geometry: grid(1);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "1"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 1

Geometry with one mesh value and attached.
geometry: grid(1 attached);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "1 attached"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 2

Geometry with one mesh value and detached.
geometry: grid(1 detached);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "1 detached"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 2

Geometry with attached before one mesh value.
geometry: grid(attached 1);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "attached 1"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 2

Geometry with attached before two mesh values.
geometry: grid(attached 1 1);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "attached 1 1"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 3

Geometry with detached before one mesh value.
geometry: grid(detached 1);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "detached 1"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 2

Geometry with detached before two mesh values.
geometry: grid(detached 1 1);
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('geometry')) is "detached 1 1"
PASS geometryPropertyValue instanceof CSSValueList is true
PASS geometryPropertyValue.constructor === CSSValueList is true
PASS geometryPropertyValue.__proto__ === CSSValueList.prototype is true
PASS geometryPropertyValue.length is 3
PASS successfullyParsed is true

TEST COMPLETE


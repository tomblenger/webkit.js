Test mix property parsing in the @-webkit-filter at-rule.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".



========================================
Test blend mode keywords.
========================================

Test multiply.
mix: multiply;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "multiply"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "multiply"

Test screen.
mix: screen;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "screen"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "screen"

Test overlay.
mix: overlay;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "overlay"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "overlay"

Test darken.
mix: darken;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "darken"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "darken"

Test lighten.
mix: lighten;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "lighten"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "lighten"

Test color-dodge.
mix: color-dodge;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "color-dodge"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "color-dodge"

Test color-burn.
mix: color-burn;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "color-burn"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "color-burn"

Test hard-light.
mix: hard-light;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "hard-light"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "hard-light"

Test soft-light.
mix: soft-light;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "soft-light"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "soft-light"

Test difference.
mix: difference;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "difference"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "difference"

Test exclusion.
mix: exclusion;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "exclusion"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "exclusion"

Test hue.
mix: hue;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "hue"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "hue"

Test saturation.
mix: saturation;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "saturation"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "saturation"

Test color.
mix: color;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "color"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "color"

Test luminosity.
mix: luminosity;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "luminosity"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "luminosity"

========================================
Test composite keywords.
========================================

Test clear.
mix: clear;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "clear"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "clear"

Test copy.
mix: copy;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "copy"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "copy"

Test source-over.
mix: source-over;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "source-over"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "source-over"

Test source-in.
mix: source-in;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "source-in"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "source-in"

Test source-out.
mix: source-out;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "source-out"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "source-out"

Test source-atop.
mix: source-atop;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "source-atop"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "source-atop"

Test destination-over.
mix: destination-over;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "destination-over"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "destination-over"

Test destination-in.
mix: destination-in;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "destination-in"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "destination-in"

Test destination-out.
mix: destination-out;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "destination-out"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "destination-out"

Test destination-atop.
mix: destination-atop;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "destination-atop"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "destination-atop"

Test xor.
mix: xor;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "xor"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 1
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "xor"

Blend mode and composite together.
mix: screen source-over;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "screen source-over"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 2
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "screen"
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "source-over"

Composite and blend mode together.
mix: source-over screen;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "source-over screen"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 2
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "source-over"
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "screen"

========================================
Capitalization tests.
========================================

All tokens capitalized.
mix: SCREEN SOURCE-OVER;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "screen source-over"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 2
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "screen"
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "source-over"

========================================
Whitespace tests.
========================================

Extra leading, middle, and trailing whitespace. 
mix:    screen   source-over   ;
PASS filterAtRule.type is CSSRule.WEBKIT_FILTER_RULE
PASS styleDeclaration.length is 1
PASS removeBaseURL(styleDeclaration.getPropertyValue('mix')) is "screen source-over"
PASS mixPropertyValue instanceof CSSValueList is true
PASS mixPropertyValue.constructor === CSSValueList is true
PASS mixPropertyValue.__proto__ === CSSValueList.prototype is true
PASS mixPropertyValue.length is 2
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "screen"
PASS subValue.cssValueType is CSSValue.CSS_PRIMITIVE_VALUE
PASS removeBaseURL(subValue.cssText) is "source-over"
PASS successfullyParsed is true

TEST COMPLETE


Test the parsing of the custom() function of the -webkit-filter property.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".



========================================
Custom function tests.
========================================

Custom function in CAPS.
CUSTOM(my-filter)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter)'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter)'

========================================
Filter chain tests.
========================================

Custom function in middle of filter chain.
grayscale() custom(my-filter) sepia()
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'grayscale() custom(my-filter) sepia()'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 3
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_GRAYSCALE
PASS subValue.cssText is 'grayscale()'
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter)'
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_SEPIA
PASS subValue.cssText is 'sepia()'

========================================
Filter name tests.
========================================

Filter name only.
custom(my-filter)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter)'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter)'

Filter name as CSS 'none' keyword.
custom(none)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(none)'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(none)'

========================================
Number parameter tests.
========================================

Integer parameters.
custom(my-filter, n1 1, n2 2 3, n3 3 4 5, n4 4 5 6 7)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, n1 1, n2 2 3, n3 3 4 5, n4 4 5 6 7)'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, n1 1, n2 2 3, n3 3 4 5, n4 4 5 6 7)'

Float parameters.
custom(my-filter, n1 1.1, n2 2.2 3.3, n3 3.1 4.1 5.1, n4 4.1 5.2 6.3 7.4)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, n1 1.1, n2 2.2 3.3, n3 3.1 4.1 5.1, n4 4.1 5.2 6.3 7.4)'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, n1 1.1, n2 2.2 3.3, n3 3.1 4.1 5.1, n4 4.1 5.2 6.3 7.4)'

Parameter name same as CSS keyword.
custom(my-filter, background 0 1 0 1)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, background 0 1 0 1)'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, background 0 1 0 1)'

========================================
Color parameter tests.
========================================

Hex color.
custom(my-filter, c #00FF00)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, c rgb(0, 255, 0))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, c rgb(0, 255, 0))'

Color keyword.
custom(my-filter, c green)
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, c rgb(0, 128, 0))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, c rgb(0, 128, 0))'

Color rgb function.
custom(my-filter, c rgb(0, 128, 0))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, c rgb(0, 128, 0))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, c rgb(0, 128, 0))'

Color hsl function.
custom(my-filter, c hsl(120, 100%, 50%))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, c rgb(0, 255, 0))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, c rgb(0, 255, 0))'

Color rgba function.
custom(my-filter, c rgba(0, 255, 0, 0.2))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, c rgba(0, 255, 0, 0.2))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, c rgba(0, 255, 0, 0.2))'

Color hsla function.
custom(my-filter, c hsla(120, 100%, 50%, 0.2))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, c rgba(0, 255, 0, 0.2))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, c rgba(0, 255, 0, 0.2))'

========================================
Transform parameter tests.
========================================

Transform parameter with one transform function.
custom(my-filter, t rotate(0deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, t rotate(0deg))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, t rotate(0deg))'

Transform parameter with multiple transform functions.
custom(my-filter, t rotate(0deg) perspective(0) scale(0, 0) translate(0px, 0px))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, t rotate(0deg) perspective(0) scale(0, 0) translate(0px, 0px))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, t rotate(0deg) perspective(0) scale(0, 0) translate(0px, 0px))'

Mulitple transform parameters.
custom(my-filter, t1 rotate(0deg), t2 rotate(0deg))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, t1 rotate(0deg), t2 rotate(0deg))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, t1 rotate(0deg), t2 rotate(0deg))'

========================================
Array parameter tests.
========================================

Array parameter with name 'array'.
custom(my-filter, array array(1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, array array(1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, array array(1))'

Array parameter with one positive integer.
custom(my-filter, a array(1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, a array(1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, a array(1))'

Array parameter with one negative float.
custom(my-filter, a array(-1.01))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, a array(-1.01))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, a array(-1.01))'

Array parameter with multiple positive integers.
custom(my-filter, a array(1, 2, 3, 4, 5))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, a array(1, 2, 3, 4, 5))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, a array(1, 2, 3, 4, 5))'

Array parameter with multiple signed floats.
custom(my-filter, a array(1, -2.2, 3.14, 0.4, 5))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, a array(1, -2.2, 3.14, 0.4, 5))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, a array(1, -2.2, 3.14, 0.4, 5))'

Multiple array parameters.
custom(my-filter, a1 array(1, -2.2, 3.14, 0.4, 5), a2 array(1, 2, 3))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, a1 array(1, -2.2, 3.14, 0.4, 5), a2 array(1, 2, 3))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, a1 array(1, -2.2, 3.14, 0.4, 5), a2 array(1, 2, 3))'

========================================
Mat2 parameter tests.
========================================

Mat2 parameter.
custom(my-filter, m mat2(1, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat2(1, 0, 0, 1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat2(1, 0, 0, 1))'

Mat2 parameter with negative values.
custom(my-filter, m mat2(-1, -1, -1, -1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat2(-1, -1, -1, -1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat2(-1, -1, -1, -1))'

Mat2 parameter with negative and positive values.
custom(my-filter, m mat2(-1, 1, 1, -1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat2(-1, 1, 1, -1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat2(-1, 1, 1, -1))'

Mat2 parameter with multiple signed floats.
custom(my-filter, m mat2(1, -2.2, 3.14, 0.4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat2(1, -2.2, 3.14, 0.4))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat2(1, -2.2, 3.14, 0.4))'

========================================
Mat3 parameter tests.
========================================

Mat3 parameter.
custom(my-filter, m mat3(1, 0, 0, 0, 1, 0, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat3(1, 0, 0, 0, 1, 0, 0, 0, 1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat3(1, 0, 0, 0, 1, 0, 0, 0, 1))'

Mat3 parameter with negative values.
custom(my-filter, m mat3(-1, -1, -1, -1, -1, -1, -1, -1, -1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat3(-1, -1, -1, -1, -1, -1, -1, -1, -1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat3(-1, -1, -1, -1, -1, -1, -1, -1, -1))'

Mat3 parameter with negative and positive values.
custom(my-filter, m mat3(-1, 1, 1, -1, -1, 1, 1, -1, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat3(-1, 1, 1, -1, -1, 1, 1, -1, 1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat3(-1, 1, 1, -1, -1, 1, 1, -1, 1))'

Mat3 parameter with multiple signed floats.
custom(my-filter, m mat3(1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat3(1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat3(1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1))'

========================================
Mat4 parameter tests.
========================================

Mat4 parameter.
custom(my-filter, m mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1))'

Mat4 parameter with negative values.
custom(my-filter, m mat4(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat4(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat4(-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1))'

Mat4 parameter with negative and positive values.
custom(my-filter, m mat4(-1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat4(-1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat4(-1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1, -1, 1, 1, -1))'

Mat4 parameter with multiple signed floats.
custom(my-filter, m mat4(1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, m mat4(1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, m mat4(1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4, 1, -2.2, 3.14, 0.4))'

========================================
Combined parameter tests.
========================================

Number parameter, color parameter, transform parameter, matrix parameters and array parameter.
custom(my-filter, n 1, c rgb(0, 128, 0), t rotate(0deg), m1 mat2(1, 0, 0, 1), m2 mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), m3 mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), a array(1))
PASS styleRule.type is CSSRule.STYLE_RULE
PASS styleDeclaration.length is 1
PASS styleDeclaration.getPropertyValue('-webkit-filter') is 'custom(my-filter, n 1, c rgb(0, 128, 0), t rotate(0deg), m1 mat2(1, 0, 0, 1), m2 mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), m3 mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), a array(1))'
PASS filterPropertyValue instanceof CSSValueList is true
PASS filterPropertyValue.constructor === CSSValueList is true
PASS filterPropertyValue.__proto__ === CSSValueList.prototype is true
PASS filterPropertyValue.length is 1
PASS subValue.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS subValue.cssText is 'custom(my-filter, n 1, c rgb(0, 128, 0), t rotate(0deg), m1 mat2(1, 0, 0, 1), m2 mat3(1, 0, 0, 0, 1, 0, 0, 0, 1), m3 mat4(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), a array(1))'
PASS successfullyParsed is true

TEST COMPLETE

